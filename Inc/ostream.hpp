#pragma once

#include <cstdint>
#include <cstdarg>

namespace debug
{

class ostream
{
/**********************************************************************************************************************/
/*************************************************** Internal Types ***************************************************/
/**********************************************************************************************************************/

/**********************************************************************************************************************/
/**************************************************** Constructors ****************************************************/
/**********************************************************************************************************************/
public:
  ostream() = delete;
  ostream(void (*write)(const char *p_str, uint16_t len));

/**********************************************************************************************************************/
/************************************************** Static Methods ****************************************************/
/**********************************************************************************************************************/
public:
  void (&write)(const char *p_str, uint16_t len);
  void vprintf(const char *p_str, va_list argList);
  void printf(const char *p_str, ...);

/**********************************************************************************************************************/
/***************************************************** Operators ******************************************************/
/**********************************************************************************************************************/
  ostream& operator<<(uint8_t value);
  ostream& operator<<(uint16_t value);
  ostream& operator<<(uint32_t value);
  ostream& operator<<(uint64_t value);
  ostream& operator<<(int8_t value);
  ostream& operator<<(int16_t value);
  ostream& operator<<(int32_t value);
  ostream& operator<<(int64_t value);
  ostream& operator<<(float value);
  ostream& operator<<(char value);
  ostream& operator<<(const char* p_data);
  ostream& operator<<(const void *ptr);
  ostream& operator<<(void (&function)(ostream& stream));
/**********************************************************************************************************************/
/************************************************** Internal Methods **************************************************/
/**********************************************************************************************************************/

/**********************************************************************************************************************/
/***************************************************** Attributes *****************************************************/
/**********************************************************************************************************************/
};

void endl(ostream& stream);

extern ostream cout;

} // debug